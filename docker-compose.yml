services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users-service
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - casino

  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - casino

  users:
    build: ./users
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PORT: 3000
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: users-service
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ACCESS_TOKEN_SECRET: 1be33b7da257ee02d36a5d690496d9f3021dcc8555b05702555fbc90e1ecbf33b03c908bb633630b80507efba23ba018bba4a0e3328da48aad3561c5f11352f9
      ACCESS_TOKEN_EXPIRATION: 10Min
      REFRESH_TOKEN_SECRET: e839582f1f279d067f899565d4626ec243ba323ea138c4e283fe5bebb828b9d3e9d87a6b8b3cadab2648bb0e846a1117cf9b9f0b34ff26e42bb5474dd7f714b8
      REFRESH_TOKEN_EXPIRATION: 24H
    restart: unless-stopped
    volumes:
      - ./users:/app
      # - users_node_modules:/app/node_modules
    networks:
      - casino

volumes:
  postgres-data:
  users_node_modules:

networks:
  casino:
    driver: bridge